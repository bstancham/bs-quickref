#+TITLE: Unity Quick-Reference

* Installation and Setup

Follow the instructions for install via command line on linux:

https://docs.unity3d.com/hub/manual/InstallHub.html#install-hub-linux

- add unity hub repository to software sources list
- add public signing key using wget
- update the package cache
- install unity hub using apt-get

* Unity Hub
Use Unity Hub to:
- Launch projects
- Create new projects
- Manage installation of different Unity versions.

* Unity Editor Keyboard Shortcuts

F = bring selected game object to centre of the window

* Unity Editor Basics
** Run Game in Editor
- press play button
- ESC to regain control of the mouse
- press play button again to stop game

* Version Control (Unity and Git)
** Introduction

Use the Git LFS (Large File Storage) extension to track non-text files i.e. game assets.

The rest of what we want to save is mainly made up of configuration files which
are just text (yaml or json format or just plain text).

Just need to put these three directories under version control (everything else
is expendable):
- Assets
- Packages
- ProjectSettings

** Configuree Git LFS

Tell Git LFS to track certain filename patterns, e.g.:

: git lfs track "*.png"

This will add a line to .gitattributes.

Make sure that .gitattributes is added to your repository to be tracked:

: git add .gitattributes

To list which patterns are being tracked:

: git lfs track

** File Types to Add to Git LFS

I've added these patterns for my basic 2D game:
- *.png
- *.wav

For a more complex project, you may wish to add many more patterns.

** .gitignore

A basic .gitignore file:
#+BEGIN_SRC shell
  # backup files
  ,*~

  # standard Unity project dirs - they will be rebuilt by the editor
  /[Bb]uild/
  /[Bb]uilds/
  /[Ll]ibrary/
  /[Ll]ogs/
  /[Tt]emp/
  /[Oo]bj/
  /[Uu]ser[Ss]ettings/
#+END_SRC

A fancy .gitignore from the web:
#+BEGIN_SRC shell
  # This .gitignore file should be placed at the root of your Unity project directory
  #
  # Get latest from https://github.com/github/gitignore/blob/main/Unity.gitignore
  #
  /[Ll]ibrary/
  /[Tt]emp/
  /[Oo]bj/
  /[Bb]uild/
  /[Bb]uilds/
  /[Ll]ogs/
  /[Uu]ser[Ss]ettings/

  # MemoryCaptures can get excessive in size.
  # They also could contain extremely sensitive data
  /[Mm]emoryCaptures/

  # Recordings can get excessive in size
  /[Rr]ecordings/

  # Uncomment this line if you wish to ignore the asset store tools plugin
  # /[Aa]ssets/AssetStoreTools*

  # Autogenerated Jetbrains Rider plugin
  /[Aa]ssets/Plugins/Editor/JetBrains*

  # Visual Studio cache directory
  .vs/

  # Gradle cache directory
  .gradle/

  # Autogenerated VS/MD/Consulo solution and project files
  ExportedObj/
  .consulo/
  ,*.csproj
  ,*.unityproj
  ,*.sln
  ,*.suo
  ,*.tmp
  ,*.user
  ,*.userprefs
  ,*.pidb
  ,*.booproj
  ,*.svd
  ,*.pdb
  ,*.mdb
  ,*.opendb
  ,*.VC.db

  # Unity3D generated meta files
  ,*.pidb.meta
  ,*.pdb.meta
  ,*.mdb.meta

  # Unity3D generated file on crash reports
  sysinfo.txt

  # Builds
  ,*.apk
  ,*.aab
  ,*.unitypackage
  ,*.app

  # Crashlytics generated file
  crashlytics-build.properties

  # Packed Addressables
  /[Aa]ssets/[Aa]ddressable[Aa]ssets[Dd]ata/*/*.bin*

  # Temporary auto-generated Android Assets
  /[Aa]ssets/[Ss]treamingAssets/aa.meta
  /[Aa]ssets/[Ss]treamingAssets/aa/*
#+END_SRC

* Sprites and Animation

* InteractML
** Introduction

Easy to use tool for adding machine learning to Unity projects (also available
for Unreal).

https://interactml.com/

wiki: https://github.com/Interactml/iml-unity/wiki

** Getting Started

I followed the instructions in the wiki.

Downloaded the latest .unitypackage file from here:

https://github.com/Interactml/iml-unity/releases

Import the InteractML package like this:
- Assets-->Import Package-->Custom Package
- select the package file on filesystem
- click Import

An InteractML subfolder now appears in Assets.

I took one of the examples from the InteractML_Examples folder which appeared.

Got as far as opening the nodes graph for
InteractML_Examples/Mouse_Input/Mouse_Colour_Change/IML_Controllers/... classification

Start exploring the node graph, resizing the window & scrolling around but Unity
Editor always crashes at this point, before I've actually done any training or
anything!

** Troubleshooting
*** ERROR: multiple precompiled assemblies with the same name

delete the duplicate assemblies

Error message should give a clue as to which folder to delete.

Deleted this folder:

: Assets/Dependencies/JsonDotNet

Shut down Unity and restarted, then it worked (well, see above).


